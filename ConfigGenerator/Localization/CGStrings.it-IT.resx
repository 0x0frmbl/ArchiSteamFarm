<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryAccess" xml:space="preserve">
    <value>Accesso</value>
  </data>
  <data name="CategoryAdvanced" xml:space="preserve">
    <value>Avanzato</value>
  </data>
  <data name="CategoryCore" xml:space="preserve">
    <value>Nucleo</value>
  </data>
  <data name="CategoryDebugging" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="CategoryPerformance" xml:space="preserve">
    <value>Prestazioni</value>
  </data>
  <data name="CategoryUpdates" xml:space="preserve">
    <value>Aggiornamenti</value>
  </data>
  <data name="ConfirmRemoval" xml:space="preserve">
    <value>Sei sicuro di voler rimuovere questa configurazione?</value>
  </data>
  <data name="ErrorBotNameEmpty" xml:space="preserve">
    <value>Il nome del tuo bot è vuoto!</value>
  </data>
  <data name="ErrorCantRemoveGlobalConfig" xml:space="preserve">
    <value>Non puoi rimuovere la configurazione globale!</value>
  </data>
  <data name="ErrorCantRenameGlobalConfig" xml:space="preserve">
    <value>Non puoi rinominare la configurazione globale!</value>
  </data>
  <data name="ErrorConfigDirectoryNotFound" xml:space="preserve">
    <value>Non è stato possibile trovare la cartella con i file di configurazione!</value>
  </data>
  <data name="ErrorConfigPropertyInvalid" xml:space="preserve">
    <value>La proprietà {0} configurata non è valida: {1}</value>
    <comment>{0} will be replaced by name of the configuration property, {1} will be replaced by invalid value</comment>
  </data>
  <data name="ErrorInvalidCurrentCulture" xml:space="preserve">
    <value>Il valore di CurrentCulture da te fornito non è valido, ConfigGenerator continuerà a lavorare utilizzando il valore predefinito!</value>
  </data>
  <data name="ErrorNameAlreadyUsed" xml:space="preserve">
    <value>Questo nome è già in uso!</value>
    <comment>This happens e.g. when user wants to create a bot with name that exists already</comment>
  </data>
  <data name="ErrorNameReserved" xml:space="preserve">
    <value>Questo nome è riservato!</value>
    <comment>This happens e.g. when user wants to create a bot with reserved name, such as "ASF"</comment>
  </data>
  <data name="ErrorObjectIsNull" xml:space="preserve">
    <value>{0} è nullo!</value>
    <comment>{0} will be replaced by object's name</comment>
  </data>
  <data name="ErrorVersionMismatch" xml:space="preserve">
    <value>Si è tentato di utilizzare una versione di ConfigGenerator non valida per il tuo ASF! 

ASF: {0} | ConfigGenerator: {1} 

Si prega di utilizzare la versione di ConfigGenerator corrispondente al tuo ASF. Sarai reindirizzato alla versione appropriata...</value>
    <comment>{0} will be replaced by ASF version (string), {1} will be replaced by ConfigGenerator version (string). Please note that this string should include newlines for formatting.</comment>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nuovo</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="Removal" xml:space="preserve">
    <value>Rimozione</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rinomina</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="TutorialBotFormEnabled" xml:space="preserve">
    <value>Eccellente! Ora l'istanza del tuo bot è abilitata. Infatti, questo era tutto il necessario per poter utilizzare questo bot in ASF, ma si potrebbe voler configurare almeno altre 2 proprietà di configurazione: {0} e {1}. Se si desidera continuare il tutorial, si prega di farlo. Ricordati di consultare la wiki se non sei sicuro come una data proprietà dovrebbe essere configurata, o se hai bisogno di ulteriore aiuto.</value>
    <comment>{0} will be replaced by "SteamLogin" configuration property, {1} will be replaced by "SteamPassword" configuration property</comment>
  </data>
  <data name="TutorialBotFormReady" xml:space="preserve">
    <value>Il tuo ASF è ora pronto! Semplicemente avvia ASF.exe e, se tutto è stato immesso correttamente, dovresti notare che ASF effetta l'accesso e inizia il processo di idle. Se hai abilitato SteamGuard o l'autenticazione a due fattori, ASF potrebbe aver bisogno di chiederti queste credenziali durante il runtime.</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  <data name="UserInputBotName" xml:space="preserve">
    <value>Si prega di inserire il nuovo nome del bot: </value>
    <comment>Please note that this translation should end with space</comment>
  </data>
  <data name="WarningConfigPropertyModified" xml:space="preserve">
    <value>{0} è stato impostato a: {1}</value>
    <comment>{0} will be replaced by name of the configuration property, {1} will be replaced by new value</comment>
  </data>
</root>